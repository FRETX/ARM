# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = $(SHELL) -c "mkdir -p \"$(1)\""
    RM = $(SHELL) -c "rm -rf \"$(1)\""
endif

ifeq (,$(filter .build,$(notdir $(CURDIR))))
.SUFFIXES:
OBJDIR := .build
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = $(MAKE) --no-print-directory -C $(OBJDIR) -f $(mkfile_path) \
		SRCDIR=$(CURDIR) $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

VPATH = .. 

GCC_BIN = 
PROJECT = Chords
OBJECTS = nRF51822/nordic/app_common/app_gpiote.o nRF51822/nordic/app_common/app_scheduler.o nRF51822/nordic/app_common/hci_mem_pool.o nRF51822/nordic/bootloader_dfu/bootloader_util_arm.o nRF51822/nordic/bootloader_dfu/dfu_app_handler.o main.o BLE_API/common/BLEDevice.o BLE_API/common/GapAdvertisingData.o BLE_API/common/GapAdvertisingParams.o BLE_API/common/GattService.o BLE_API/common/UUID.o BLE_API/services/DFUService.o BLE_API/services/UARTService.o nRF51822/nRF51822n.o nRF51822/nRF51Gap.o nRF51822/nRF51GattServer.o nRF51822/btle/btle.o nRF51822/btle/btle_advertising.o nRF51822/btle/btle_gap.o nRF51822/btle/custom/custom_helper.o nRF51822/nordic/softdevice_handler.o nRF51822/nordic/app_common/crc16.o nRF51822/nordic/app_common/pstorage.o nRF51822/nordic/ble/ble_advdata.o nRF51822/nordic/ble/ble_advdata_parser.o nRF51822/nordic/ble/ble_bondmngr.o nRF51822/nordic/ble/ble_conn_params.o nRF51822/nordic/ble/ble_debug_assert_handler.o nRF51822/nordic/ble/ble_error_log.o nRF51822/nordic/ble/ble_services/ble_srv_common.o 
SYS_OBJECTS = mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/board.o mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/cmsis_nvic.o mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/retarget.o mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/startup_NRF51822.o mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/system_nrf51822.o 
INCLUDE_PATHS = -I../. -I../BLE_API -I../BLE_API/common -I../BLE_API/public -I../BLE_API/services -I../nRF51822 -I../nRF51822/btle -I../nRF51822/btle/custom -I../nRF51822/common -I../nRF51822/nordic -I../nRF51822/nordic/app_common -I../nRF51822/nordic/ble -I../nRF51822/nordic/ble/ble_services -I../nRF51822/nordic/bootloader_dfu -I../nRF51822/nordic/nrf-sdk -I../nRF51822/nordic/nrf-sdk/app_common -I../nRF51822/nordic/nrf-sdk/ble -I../nRF51822/nordic/nrf-sdk/ble/ble_services -I../nRF51822/nordic/nrf-sdk/ble/device_manager -I../nRF51822/nordic/nrf-sdk/bootloader_dfu -I../nRF51822/nordic/nrf-sdk/s110 -I../nRF51822/nordic/nrf-sdk/sd_common -I../mbed/. -I../mbed/TARGET_NRF51822 -I../mbed/TARGET_NRF51822/TARGET_NORDIC -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822 -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nrf-sdk -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nrf-sdk/app_common -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nrf-sdk/sd_common -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_1_0 -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_1_0/s110_nrf51822_7.1.0_API -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_1_0/s110_nrf51822_7.1.0_API/include -I../mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/TARGET_NRF51822_MKIT -I../mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM 
LIBRARY_PATHS = -L../mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM 
LIBRARIES = -lmbed 
LINKER_SCRIPT = ../mbed/TARGET_NRF51822/TOOLCHAIN_GCC_ARM/NRF51822.ld
SOFTDEVICE = mbed/TARGET_NRF51822/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s130_nrf51822_1_0_0/s130_nrf51_1.0.0_softdevice.hex


############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size
SREC_CAT = srec_cat
 


CPU = -mcpu=cortex-m0 -mthumb 
CC_FLAGS = -c -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -fno-builtin -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -mcpu=cortex-m0 -mthumb -Os -std=gnu99 -DDEVICE_ERROR_PATTERN=1 -DNRF51 -DTARGET_MCU_NRF51_16K_S130 -DTARGET_LIKE_MBED -DTARGET_NRF51822 -DDEVICE_PORTINOUT=1 -D__MBED_CMSIS_RTOS_CM -DTOOLCHAIN_object -D__CMSIS_RTOS -DTARGET_MCU_NRF51_16K -DTOOLCHAIN_GCC -DTARGET_CORTEX_M -DARM_MATH_CM0 -DTARGET_UVISOR_UNSUPPORTED -DFEATURE_BLE=1 -DTARGET_M0 -DTARGET_MCU_NRF51 -DDEVICE_SERIAL=1 -DMBED_BUILD_TIMESTAMP=1474488771.38 -D__MBED__=1 -D__CORTEX_M0 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -DTARGET_NRF51822_MKIT -DTARGET_RELEASE -DTARGET_NORDIC -DTARGET_MCU_NORDIC_16K -DDEVICE_PORTIN=1 -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DTARGET_MCU_NRF51822 -DDEVICE_SPI=1 -DDEVICE_INTERRUPTIN=1 -DMBED_RTOS_SINGLE_THREAD -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_LIKE_CORTEX_M0 -include mbed_config.h -MMD -MP
CPPC_FLAGS = -c -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -fno-builtin -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -mcpu=cortex-m0 -mthumb -Os -std=gnu++98 -fno-rtti -Wvla -DDEVICE_ERROR_PATTERN=1 -DNRF51 -DTARGET_MCU_NRF51_16K_S130 -DTARGET_LIKE_MBED -DTARGET_NRF51822 -DDEVICE_PORTINOUT=1 -D__MBED_CMSIS_RTOS_CM -DTOOLCHAIN_object -D__CMSIS_RTOS -DTARGET_MCU_NRF51_16K -DTOOLCHAIN_GCC -DTARGET_CORTEX_M -DARM_MATH_CM0 -DTARGET_UVISOR_UNSUPPORTED -DFEATURE_BLE=1 -DTARGET_M0 -DTARGET_MCU_NRF51 -DDEVICE_SERIAL=1 -DMBED_BUILD_TIMESTAMP=1474488771.38 -D__MBED__=1 -D__CORTEX_M0 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -DTARGET_NRF51822_MKIT -DTARGET_RELEASE -DTARGET_NORDIC -DTARGET_MCU_NORDIC_16K -DDEVICE_PORTIN=1 -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DTARGET_MCU_NRF51822 -DDEVICE_SPI=1 -DDEVICE_INTERRUPTIN=1 -DMBED_RTOS_SINGLE_THREAD -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_LIKE_CORTEX_M0 -include mbed_config.h -MMD -MP
ASM_FLAGS = -x assembler-with-cpp -D__CORTEX_M0 -DMBED_RTOS_SINGLE_THREAD -DTARGET_MCU_NRF51_16K -DTARGET_NRF51822_MKIT -DNRF51 -DTARGET_MCU_NRF51_16K_S130 -DTARGET_NRF51822 -DARM_MATH_CM0 -D__MBED_CMSIS_RTOS_CM -D__CMSIS_RTOS -DTARGET_MCU_NORDIC_16K -c -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -fno-builtin -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -mcpu=cortex-m0 -mthumb -Os
CC_SYMBOLS = -DDEVICE_ERROR_PATTERN=1 -DNRF51 -DTARGET_MCU_NRF51_16K_S130 -DTARGET_LIKE_MBED -DTARGET_NRF51822 -DDEVICE_PORTINOUT=1 -D__MBED_CMSIS_RTOS_CM -DTOOLCHAIN_object -D__CMSIS_RTOS -DTARGET_MCU_NRF51_16K -DTOOLCHAIN_GCC -DTARGET_CORTEX_M -DARM_MATH_CM0 -DTARGET_UVISOR_UNSUPPORTED -DFEATURE_BLE=1 -DTARGET_M0 -DTARGET_MCU_NRF51 -DDEVICE_SERIAL=1 -DMBED_BUILD_TIMESTAMP=1474488771.38 -D__MBED__=1 -D__CORTEX_M0 -DDEVICE_I2C=1 -DDEVICE_PORTOUT=1 -DTARGET_NRF51822_MKIT -DTARGET_RELEASE -DTARGET_NORDIC -DTARGET_MCU_NORDIC_16K -DDEVICE_PORTIN=1 -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DTARGET_MCU_NRF51822 -DDEVICE_SPI=1 -DDEVICE_INTERRUPTIN=1 -DMBED_RTOS_SINGLE_THREAD -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_LIKE_CORTEX_M0 

LD_FLAGS =-Wl,--gc-sections -Wl,--wrap,main -mcpu=cortex-m0 -mthumb --specs=nano.specs 
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif


.PHONY: all lst size

all: $(PROJECT).bin $(PROJECT).hex size



.asm.o:
	+@$(call MAKEDIR,$(dir $@))
	$(CC) $(CPU) -c $(ASM_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<
.s.o:
	+@$(call MAKEDIR,$(dir $@))
	$(CC) $(CPU) -c $(ASM_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<
.S.o:
	+@$(call MAKEDIR,$(dir $@))
	$(CC) $(CPU) -c $(ASM_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	$(CPP) $(CPPC_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(LINKER_SCRIPT)
	$(LD) $(LD_FLAGS) -T$(filter %.ld, $^) $(LIBRARY_PATHS) -o $@ $(filter %.o, $^) -Wl,--start-group $(LIBRARIES) $(LD_SYS_LIBS) -Wl,--end-group


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)


merge:
	$(SREC_CAT) $(SOFTDEVICE) -intel $(PROJECT).hex -intel -o combined.hex -intel --line-length=44

endif
